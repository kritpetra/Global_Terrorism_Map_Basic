{
    "contents" : "## sorry for the messiness\n\n\n# '%!in%' <- function(x,y)!('%in%'(x,y))\n\n############################################################################\n###########   CREATING REGIONAL DATASETS from GAPMINDER DATA     ###########\n############################################################################\n\nGMdata <- read.csv(\"FinalGapminder.csv\", stringsAsFactors=FALSE)\nGMdata$Year <- as.numeric(gsub(\"[X]\", \"\", GMdata$Year))\nGMdata <- GMdata[GMdata$Year >= 1970,]\nGMdata$TotalPopulation <- as.numeric(gsub(\"[,]\", \"\", GMdata$TotalPopulation))\n\nworldshapes <- readShapeSpatial(\"worldshapes/ne_110m_admin_0_countries\")\nworldshapes$admin <- as.character(worldshapes$admin)\n### 1. Change names to match\nworldshapes$admin <- gsub(\"Palestine\", \"West Bank and Gaza Strip\", worldshapes$admin)\nworldshapes$admin <- gsub(\"W. Sahara\", \"Western Sahara\", worldshapes$admin)\nworldshapes$admin <- gsub(\"United Republic of Tanzania\", \"Tanzania\", worldshapes$admin)\nworldshapes$admin <- gsub(\"Guinea Bissau\", \"Guinea-Bissau\", worldshapes$admin)\nworldshapes$admin <- gsub(\"East Timor\", \"Timor-Leste\", worldshapes$admin)\nworldshapes$admin <- gsub(\"United States of America\", \"United States\", worldshapes$admin)\nworldshapes$admin <- gsub(\"Republic of Serbia\", \"Serbia\", worldshapes$admin)\nworldshapes$admin <- gsub(\"Republic of Congo\", \"Congo (Brazzaville)\", worldshapes$admin)\nworldshapes$admin <- gsub(\"Democratic Republic of the Congo\", \"Congo (Kinshasa)\", worldshapes$admin)\nworldshapes$admin <- gsub(\"The Bahamas\", \"Bahamas\", worldshapes$admin)\nworldshapes$admin <- gsub(\"Bosnia and Herzegovina\", \"Bosnia-Herzegovina\", worldshapes$admin)\n\nGMdata$Country <- gsub(\"West Bank and Gaza\", \"West Bank and Gaza Strip\", GMdata$Country)\nGMdata$Country <- gsub(\"Slovak Republic\", \"Slovakia\", GMdata$Country)\nGMdata$Country <- gsub(\"Macedonia, FYR\", \"Macedonia\", GMdata$Country)\nGMdata$Country <- gsub(\"Falkland Islands (Malvinas)\", \"Falkland Islands\", GMdata$Country)\nGMdata$Country <- gsub(\"Dominican Rep.\", \"Dominican Republic\", GMdata$Country)\nGMdata <- GMdata[GMdata$Country != \"South Korea\",]\nGMdata <- GMdata[GMdata$Country != \"North Korea\",]\nGMdata$Country <- gsub(\"Korea, Rep.\", \"South Korea\", GMdata$Country)\nGMdata$Country <- gsub(\"Korea, Dem. Rep.\", \"North Korea\", GMdata$Country)\nGMdata$Country <- gsub(\"Congo, Rep.\", \"Congo (Brazzaville)\", GMdata$Country)\nGMdata$Country <- gsub(\"Congo, Dem. Rep.\", \"Congo (Kinshasa)\", GMdata$Country)\nGMdata <- GMdata[GMdata$Country != \"Yemen\",]\nGMdata$Country <- gsub(\"Yemen, Rep.\", \"Yemen\", GMdata$Country)\nGMdata$Country <- gsub(\"Cote d'Ivoire\", \"Ivory Coast\", GMdata$Country)\nGMdata$Country <- gsub(\"Czech Rep.\", \"Czech Republic\", GMdata$Country)\nGMdata$Country <- gsub(\"Bosnia and Herzegovina\", \"Bosnia-Herzegovina\", GMdata$Country)\nGMdata$Country <- gsub(\"Central African Rep.\", \"Central African Republic\", GMdata$Country)\n\nworldshapes <- worldshapes[order(worldshapes$admin),]\n\n## Redefine regions ###\nworldshapes$region_wb[worldshapes$admin == \"Cyprus\"] <- \"Middle East & North Africa\"\nworldshapes$region_wb[worldshapes$admin == \"Northern Cyprus\"] <- \"Middle East & North Africa\"\nworldshapes$region_wb[worldshapes$admin == \"Turkey\"] <- \"Middle East & North Africa\"\nworldshapes$region_wb[worldshapes$admin == \"Djibouti\"] <- \"Sub-Saharan Africa\"\n\n# Reminder: use Czechoslovakia data for Czech and Slovak, Yugoslavia for all the Balkan states, USSR for all the NIS\n\n##### MidEastData #####\nMidEastData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"Middle East & North Africa\"],]\n# Sort data alphabetically\nMidEastData <- MidEastData[order(MidEastData$Country, MidEastData$Year),]\n# Add new column for region\nMidEastData$region <- rep(\"MidEast\",nrow(MidEastData))\n\n##### NorthAmData #####\nNorthAmData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"North America\"],]\n# Sort data alphabetically\nNorthAmData <- NorthAmData[order(NorthAmData$Country, NorthAmData$Year),]\n# Add new column for region\nNorthAmData$region <- rep(\"NorthAm\",nrow(NorthAmData))\n\n##### SouthAsData #####\nSouthAsData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"South Asia\"],]\n# Sort data alphabetically\nSouthAsData <- SouthAsData[order(SouthAsData$Country, SouthAsData$Year),]\n# Add new column for region\nSouthAsData$region <- rep(\"SouthAs\",nrow(SouthAsData))\n\n##### SubSahrData #####\nSubSahrData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"Sub-Saharan Africa\"],]\n# Sort data alphabetically\nSubSahrData <- SubSahrData[order(SubSahrData$Country, SubSahrData$Year),]\n# Add new column for region\nSubSahrData$region <- rep(\"SubSahr\",nrow(SubSahrData))\n\n##### EurasiaData #####\nEurasiaData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"Europe & Central Asia\"],]\n# Sort data alphabetically\nEurasiaData <- EurasiaData[order(EurasiaData$Country, EurasiaData$Year),]\n# Add new column for region\nEurasiaData$region <- rep(\"Eurasia\",nrow(EurasiaData))\n\n##### LatinAmData #####\nLatinAmData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"Latin America & Caribbean\"],]\n# Sort data alphabetically\nLatinAmData <- LatinAmData[order(LatinAmData$Country, LatinAmData$Year),]\n# Add new column for region\nLatinAmData$region <- rep(\"LatinAm\",nrow(LatinAmData))\n\n##### AsiaPacData #####\nAsiaPacData <- GMdata[GMdata$Country %in% worldshapes$admin[worldshapes$region_wb == \"East Asia & Pacific\"],]\n# Sort data alphabetically\nAsiaPacData <- AsiaPacData[order(AsiaPacData$Country, AsiaPacData$Year),]\n# Add new column for region\nAsiaPacData$region <- rep(\"AsiaPac\",nrow(AsiaPacData))\n\n###############################################################\n\n# Bind different regiondata together\nregionData <- rbind(MidEastData, NorthAmData, SouthAsData, SubSahrData, EurasiaData, LatinAmData, AsiaPacData)\nrm(MidEastData, NorthAmData, SouthAsData, SubSahrData, EurasiaData, LatinAmData, AsiaPacData)\n\nregionData <- regionData[order(regionData$Country, regionData$Year),]\n\n# Delete any extra countries\nintersection <- intersect(regionData$Country, worldshapes$admin)\nregionData <- regionData[regionData$Country %in% intersection,]\nworldshapes <- worldshapes[worldshapes$admin %in% intersection,]\n\n########## Add HDI Index #####################\n\nHDI <- read.csv(\"/data/home/graphics/Krit/GTD regions simple/HDI.csv\", stringsAsFactors=FALSE)\nHDI <- HDI[HDI$Country != 'Bahrain', ]\nHDI$Country <- gsub('Palestine', 'West Bank and Gaza Strip', HDI$Country)\n\nregionData$HDI[regionData$Year < 1980] <- NA\nfor (country in HDI$Country) {\n     for (year in 1980:2013)\n          if ( year < 1990 ) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X1980']\n          } else if ( year < 2000) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X1990']\n          } else if ( year < 2005) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2000']\n          } else if ( year < 2008) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2005']\n          } else if ( year < 2010) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2008']\n          } else if ( year == 2010) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2010']\n          } else if ( year == 2011) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2011']\n          } else if ( year == 2012) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2012']\n          } else if ( year == 2013) {\n               regionData$HDI[regionData$Country == country &\n                                   regionData$Year == year] <- HDI[HDI$Country == country, 'X2013']\n          }\n\n}\n\nrm(HDI)\n\n############# Add military Expenditure ##############\n\nmilxpnd <- read.delim(\"/data/home/graphics/Krit/GTD regions simple/milxpnd.csv\", stringsAsFactors=FALSE)\n\nfor ( country in milxpnd$Country ){\n     for ( year in 1970:2013 ){\n          regionData$MilXpnd[regionData$Country == country &\n                                  regionData$Year == year] <- milxpnd[milxpnd$Country == country, paste0('X', year)]\n     }\n}\nrm(milxpnd)\n\n###############################################################\n################### TERRORISM DATA ############################\n###############################################################\n\n\n# Old data\nterrorismData <- read.csv(\"/data/home/graphics/Terrorism Information/GTD/globalterrorismdb_0814dist.csv\", stringsAsFactors=FALSE)\n# New data\n# terrorismData <- read.csv(\"/data/home/graphics/Terrorism Information/FinalGTD.csv\", stringsAsFactors=FALSE)\n\naggregateData <- function(terrorismCountries, GMCountry){\n     regionSubset <- terrorismData[terrorismData$country_txt %in% terrorismCountries,]\n     for(year in 1970:2013) {\n          yearSubset <- regionSubset[regionSubset$iyear == year,]\n          regionData$NumIncidents[regionData$Country == GMCountry & regionData$Year == year] <-\n               nrow(yearSubset)\n          NumSuccess <- sum(yearSubset$success)\n          regionData$NumFatalities[regionData$Country == GMCountry & regionData$Year == year] <-\n               sum(yearSubset$nkill, na.rm = TRUE)\n          regionData$NumWounded[regionData$Country == GMCountry & regionData$Year == year] <-\n               sum(yearSubset$nwound, na.rm = TRUE)\n          regionData$PctSuccess[regionData$Country == GMCountry & regionData$Year == year] <-\n               ifelse(nrow(yearSubset)==0, \"-\", paste0(format(NumSuccess/nrow(yearSubset)*100, digits = 3), \"%\"))\n          regionData$FatalPerInc[regionData$Country == GMCountry & regionData$Year == year] <-\n               ifelse(nrow(yearSubset)==0, \"-\", format(sum(yearSubset$nkill, na.rm = TRUE)/nrow(yearSubset), digits = 3))\n     }\n     regionData\n}\n\nfor(country in c(unique(regionData$Country))){\n     regionSubset <- terrorismData[terrorismData$country_txt == country,]\n     for(year in 1970:2013) {\n          yearSubset <- regionSubset[regionSubset$iyear == year,]\n          regionData$NumIncidents[regionData$Country == country & regionData$Year == year] <-\n               nrow(yearSubset)\n          NumSuccess <- sum(yearSubset$success)\n          regionData$NumFatalities[regionData$Country == country & regionData$Year == year] <-\n               sum(yearSubset$nkill, na.rm = TRUE)\n          regionData$NumWounded[regionData$Country == country & regionData$Year == year] <-\n               sum(yearSubset$nwound, na.rm = TRUE)\n          regionData$PctSuccess[regionData$Country == country & regionData$Year == year] <-\n               ifelse(nrow(yearSubset)==0, \"-\", paste0(format(NumSuccess/nrow(yearSubset)*100, digits = 3), \"%\"))\n          regionData$FatalPerInc[regionData$Country == country & regionData$Year == year] <-\n               ifelse(nrow(yearSubset)==0, \"-\", format(sum(yearSubset$nkill, na.rm = TRUE)/nrow(yearSubset), digits = 3))\n}}\nregionData[regionData$Country %in% c('Northern Cyprus', 'Somaliland'),\n           c('NumIncidents', 'NumFatalities', 'NumWounded', 'PctSuccess', 'FatalPerInc')] <- NA\n\nregionData <- aggregateData(c('Great Britain', 'Northern Ireland'),'United Kingdom')\nregionData <- aggregateData('Slovak Republic','Slovakia')\nregionData <- aggregateData(c('Yugoslavia', 'Serbia', 'Serbia-Montenegro'),'Serbia')\nregionData <- aggregateData(c('Rhodesia', 'Zimbabwe'), 'Zimbabwe')\nregionData <- aggregateData(c('East Germany (GDR)', 'West Germany (FRG)', 'Germany'), 'Germany')\nregionData <- aggregateData(c('Soviet Union', 'Russia'), 'Russia')\nregionData <- aggregateData(c('South Yemen', 'North Yemen', 'Yemen'), 'Yemen')\nregionData <- aggregateData(c('Czechoslovakia', 'Czech Republic'), 'Czech Republic')\nregionData <- aggregateData(c('South Vietnam', 'Vietnam'), 'Vietnam')\n\n\nregionData[regionData$Year == 1993,\n           c('NumIncidents', 'NumFatalities', 'NumWounded', 'PctSuccess', 'FatalPerInc')] <- NA\n\nrm(regionSubset, yearSubset, country, year, NumSuccess)\n\n#### RELIGION ####\nGTDReligions <- read.csv(\"/data/home/graphics/Terrorism Information/GTDReligions.csv\", stringsAsFactors=FALSE)\nregionData$NumCode <- countrycode(regionData$Country, \"country.name\", \"iso3n\", warn = TRUE)\nregionData <- left_join(regionData, GTDReligions[,c('Religion', 'NumCode')], by='NumCode')\nregionData$Religion[regionData$Country == \"Northern Cyprus\"] <- \"Sunni Muslim\"\nregionData$Religion[regionData$Country == \"Kosovo\"] <- \"Muslim\"\nregionData <- regionData[!(regionData$Country == \"West Bank and Gaza Strip\" & regionData$Religion == \"N/A\"),]\nrm(GTDReligions)\n\nterrorismData$region2[terrorismData$region == 1] <- \"North America\"\nterrorismData$region2[terrorismData$region == 2] <- \"Latin America & Caribbean\"\nterrorismData$region2[terrorismData$region == 3] <- \"Latin America & Caribbean\"\nterrorismData$region2[terrorismData$region == 4] <- \"East Asia & Pacific\"\nterrorismData$region2[terrorismData$region == 5] <- \"East Asia & Pacific\"\nterrorismData$region2[terrorismData$region == 6] <- \"South Asia\"\nterrorismData$region2[terrorismData$region == 7] <- \"Europe & Central Asia\"\nterrorismData$region2[terrorismData$region == 8] <- \"Europe & Central Asia\"\nterrorismData$region2[terrorismData$region == 9] <- \"Europe & Central Asia\"\nterrorismData$region2[terrorismData$region == 10] <- \"Middle East & North Africa\"\nterrorismData$region2[terrorismData$region == 11] <- \"Sub-Saharan Africa\"\nterrorismData$region2[terrorismData$region == 12] <- \"Europe & Central Asia\"\nterrorismData$region2[terrorismData$region == 13] <- \"East Asia & Pacific\"\nterrorismData$region2[terrorismData$country_txt == 'Mexico'] <- \"Latin America & Caribbean\"\n\n# Add colors to religions\n#regionDatabackup <- regionData\n\n\nGTDbyCountryYear <- read.csv(\"/data/home/graphics2/Global Terrorism Plots/GTDbyCountryYear.csv\", stringsAsFactors=FALSE)\n\nregionData <- regionDatabackup\nregionData$Religion <- as.character(regionData$Religion)\nfor ( country in unique(regionData$Country)[\n     which(unique(regionData$Country) %in% GTDbyCountryYear$Country)] ) {\n     regionData$ReligionColor[regionData$Country == country] <- GTDbyCountryYear$Religion[GTDbyCountryYear$Country == country][1]\n}\nrm(GTDbyCountryYear)\n\nregionData$ReligionColor[regionData$Country == \"Greenland\"] <- \"Christian\"\nregionData$ReligionColor[regionData$Country == \"Kosovo\"] <- \"Muslim\"\nregionData$ReligionColor[regionData$Country == \"Mongolia\"] <- \"Buddhist\"\nregionData$ReligionColor[regionData$Country == \"Northern Cyprus\"] <- \"Muslim\"\nregionData$ReligionColor[regionData$Country == \"Slovakia\"] <- \"Catholic\"\nregionData$ReligionColor[regionData$Country == \"Somaliland\"] <- \"Muslim\"\nregionData$ReligionColor[regionData$Country == \"United Kingdom\"] <- \"Christian\"\nregionData$ReligionColor[regionData$Country == \"Oman\"] <- \"Muslim\"\n\nregionData$ReligionColor[regionData$ReligionColor == \"Muslim\"] <- \"Sunni\"\nregionData$ReligionColor[regionData$Religion == \"Shia Muslim\"] <- \"Shiʿa\"\nregionData$ReligionColor[regionData$Country %in% c('Oman', 'Bosnia-Herzegovina')] <- \"Muslim\"\n\nregionData$ReligionColor[regionData$ReligionColor == \"Muslim\"] <- \"Muslim (Other)\"\nregionData$ReligionColor[regionData$ReligionColor == \"Sunni\"] <- \"Muslim (Sunni)\"\nregionData$ReligionColor[regionData$ReligionColor == \"Shiʿa\"] <- \"Muslim (Shiʿa)\"\nregionData$ReligionColor[regionData$ReligionColor == \"Christian\"] <- \"Christian (Other)\"\nregionData$ReligionColor[regionData$ReligionColor == \"Catholic\"] <- \"Christian (Catholic)\"\nregionData$ReligionColor[regionData$ReligionColor == \"Orthodox\"] <- \"Christian (Orthodox)\"\n\nnames(regionData)[25] <- \"ReligionDetail\"\nnames(regionData)[28] <- \"Religion\"\n\nwrite.csv(regionData, 'regionData.csv')\n\n# ####### Filling in coordinates for those which do not have them #########\n\n# terrorismDataNA <- terrorismData[is.na(terrorismData$longitude),c('eventid', 'country_txt', 'city', 'latitude', 'longitude')]\n# #to prevent search errors when using the function\n# terrorismDataNA$city <- gsub('Unknown', '', terrorismDataNA$city)\n# terrorismDataNA$city <- gsub('unknown', '', terrorismDataNA$city)\n# terrorismDataNA$country_txt <- gsub('West Bank and Gaza Strip', 'Palestine', terrorismDataNA$country_txt)\n# terrorismDataNA$country_txt <- gsub('North Yemen', 'Yemen', terrorismDataNA$country_txt)\n# terrorismDataNA$country_txt <- gsub('South Yemen', 'Yemen', terrorismDataNA$country_txt)\n# terrorismDataNA$country_txt <- gsub('West Germany \\\\(FRG\\\\)', 'Germany', terrorismDataNA$country_txt)\n# terrorismDataNA$country_txt <- gsub('Northern Ireland', 'United Kingdom', terrorismDataNA$country_txt)\n# terrorismDataNA$city <- gsub('\\\\*', '', terrorismDataNA$city)\n# terrorismDataNA$city <- gsub(\"\\\\([^\\\\)]+\\\\)\",\"\",terrorismDataNA$city)\n# terrorismDataNA$city <- gsub(\"\\\\?\",\"\",terrorismDataNA$city)\n#\n# #If city names are lost:\n# terrorismDataNA$city <- terrorismData[is.na(terrorismData$longitude),'city']\n#\n# library(geonames)\n#\n# getCoordinates <- function(row){\n#      coordinates <- GNsearch(\n#           name = terrorismDataNA$city[row],\n#           countryName = terrorismDataNA$country_txt[row],\n#           username='petracha17')[1, c('lat', 'lng')]\n#      if(is.null(coordinates[['lat']])) {\n#           return()\n#      }\n#      coordinates[['lat']] ->> terrorismDataNA$latitude[row]\n#      coordinates[['lng']] ->> terrorismDataNA$longitude[row]\n# }\n#\n####### !!!!!WARNING. DON'T TRY RUNNING THIS UNLESS NECESSARY!!!!! #######\n# for(row in 1:nrow(terrorismDataNA)){\n#      getCoordinates(row)\n# }\n#\n# If city names are unknown, put into countrylevelCoord, if city is known, put into citylevelCoord\n#\n# rm(terrorismDataNA)\n#####\ncitylevelCoord <- read.csv('citylevelCoord.csv')\ncountrylevelCoord <- read.csv('countrylevelCoord.csv')\n# Now, we will 'jiggle' the points...\nterrorismData$latitude <- as.numeric(terrorismData$latitude)\n\nset.seed(20150625)\nterrorismData$longitude <- terrorismData$longitude + rnorm(nrow(terrorismData),0, 0.0025) # for given coordinates in GTD\nterrorismData$latitude <- terrorismData$latitude + rnorm(nrow(terrorismData),0, 0.0025)\n\ncitylevelCoord$longitude <- citylevelCoord$longitude + rnorm(nrow(citylevelCoord), 0, 0.01) # for city level coordinates\ncitylevelCoord$latitude <- citylevelCoord$latitude + rnorm(nrow(citylevelCoord), 0, 0.01)\n\ncountrylevelCoord$longitude <- countrylevelCoord$longitude + rnorm(nrow(countrylevelCoord), 0, 0.25) # for country level coordinates\ncountrylevelCoord$latitude <- countrylevelCoord$latitude + rnorm(nrow(countrylevelCoord), 0, 0.25)\n\nnewCoords <- rbind(citylevelCoord, countrylevelCoord)\n\n# WTF the event ids are corrupt\ntempterror <- terrorismData[is.na(terrorismData$longitude),c('eventid', 'country_txt', 'city', 'latitude', 'longitude')]\n\ntempterror$eventid_new <- floor(tempterror$eventid/1000000)*1000000\ntempterror$city <- gsub('Unknown', '', tempterror$city)\ntempterror$city <- gsub('unknown', '', tempterror$city)\ntempterror$country_txt <- gsub('West Bank and Gaza Strip', 'Palestine', tempterror$country_txt)\ntempterror$country_txt <- gsub('North Yemen', 'Yemen', tempterror$country_txt)\ntempterror$country_txt <- gsub('South Yemen', 'Yemen', tempterror$country_txt)\ntempterror$country_txt <- gsub('West Germany \\\\(FRG\\\\)', 'Germany', tempterror$country_txt)\ntempterror$country_txt <- gsub('Northern Ireland', 'United Kingdom', tempterror$country_txt)\ntempterror$city <- gsub('\\\\*', '', tempterror$city)\ntempterror$city <- gsub(\"\\\\([^\\\\)]+\\\\)\",\"\",tempterror$city)\ntempterror$city <- gsub(\"\\\\?\",\"\",tempterror$city)\n\nnewCoords <- newCoords[order(newCoords$eventid, newCoords$country_txt, newCoords$city),]\ntempterror <- tempterror[order(tempterror$eventid_new, tempterror$country_txt, tempterror$city),]\ntempjoined <- cbind(newCoords[,c('longitude', 'latitude')], tempterror)\n\n\n# Now merge everything together!\n\nfor ( id in tempjoined$eventid ) {\n     terrorismData$latitude[terrorismData$eventid == id] <- tempjoined$latitude[tempjoined$eventid == id]\n     terrorismData$longitude[terrorismData$eventid == id] <- tempjoined$longitude[tempjoined$eventid == id]\n}\n\nrm(tempjoined, tempterror, newCoords, id, citylevelCoord, countrylevelCoord)\n\nkeepCols <- {c('eventid', 'iyear', 'imonth', 'iday', 'country_txt', 'city', 'latitude', 'longitude', 'summary', 'success', 'suicide',\n               'attacktype1_txt', 'target1', 'gname', 'weaptype1_txt', 'weapsubtype1_txt', 'nkill', 'nwound', 'addnotes', 'INT_ANY', 'region2')}\n\nterrorismData <- terrorismData[,keepCols]\n\nterrorismData <- terrorismData[!is.na(terrorismData$longitude),]\nterrorismData$latitude <- as.numeric(terrorismData$latitude)\n",
    "created" : 1435070472386.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "978129778",
    "id" : "FC0D4E73",
    "lastKnownWriteTime" : 1436375961,
    "path" : "~/graphics/Krit/GTD regions simple/clean.R",
    "project_path" : "clean.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}